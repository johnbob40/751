package main;

import java.util.Collection;
import pu.RedLib.Reduction;
import pt.runtime.TaskIDGroup;

public class PTAverage {
	public static double average(Collection<Double> elements){
		double sum = 0;
		int myPos = ParaTask.getLowerBoundThreshold();
		//ParaTask.
		//System.out.println(myPos);
		//System.out.println("9");
		for(Double d : elements){
			sum += d;
		}
		return myPos;
	}
	
	//public static double compute()

	public static void compute()throws ExecutionException, InterruptedException{
		Collection<Double> elements = Data.generate(30000000);
		long startTime = System.currentTimeMillis();
		double x = 0;
		for(Double d : elements){
			x += d;
			//System.out.println(Thread.currentThread().getId());
		}

		long endTime = System.currentTimeMillis();

		long duration = (endTime - startTime);
		System.out.println(duration);
		System.out.println(x);
		
		startTime = System.currentTimeMillis();
		//TaskIDGroup<Double> multiID = average(elements);
		//for(Double d : multiID)
			//System.out.println(d);
		//double finalVal = multiID.reduce(Reduction.DoubleSUM);
		endTime = System.currentTimeMillis();
		duration = (endTime - startTime);
		System.out.println(duration);
		//System.out.println(finalVal);
		}
	
}